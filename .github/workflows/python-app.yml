name: Python CI

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Mode (all | changed | path | marker)'
        required: true
        default: 'all'
      test_path:
        description: 'Path to test or test function (for mode=path)'
        required: false
      test_marker:
        description: 'Test marker (for mode=marker)'
        required: false
  push:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Google Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
        echo "Chrome version: $CHROME_VERSION"
        wget -N https://chromedriver.storage.googleapis.com/$CHROME_VERSION/chromedriver_linux64.zip
        unzip -o chromedriver_linux64.zip
        sudo mv -f chromedriver /usr/local/bin/chromedriver
        sudo chmod +x /usr/local/bin/chromedriver

    - name: Run tests based on mode
      shell: bash
      run: |
        python --version
        pip --version
        python -m pytest --version

        MODE="${{ github.event.inputs.mode }}"
        PATH="${{ github.event.inputs.test_path }}"
        MARKER="${{ github.event.inputs.test_marker }}"

        echo "Mode: $MODE"
        echo "Test path: $PATH"
        echo "Marker: $MARKER"

        if [[ "$MODE" == "all" ]]; then
          python -m pytest

        elif [[ "$MODE" == "changed" ]]; then
          # Для push событие diff с прошлого коммита, для workflow_dispatch можно будет пусто
          CHANGED_TESTS=$(git diff --name-only HEAD~1 HEAD | grep -E 'tests/.*\.py$' || true)
          echo "Changed test files: $CHANGED_TESTS"
          if [ -n "$CHANGED_TESTS" ]; then
            python -m pytest $CHANGED_TESTS
          else
            echo "No changed tests found."
          fi

        elif [[ "$MODE" == "path" ]]; then
          if [ -n "$PATH" ]; then
            python -m pytest "$PATH"
          else
            echo "Error: test_path is empty"
            exit 1
          fi

        elif [[ "$MODE" == "marker" ]]; then
          if [ -n "$MARKER" ]; then
            python -m pytest -m "$MARKER"
          else
            echo "Error: test_marker is empty"
            exit 1
          fi

        else
          echo "Invalid mode: $MODE"
          exit 1
        fi
